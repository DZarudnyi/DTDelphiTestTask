unit TestTask;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls, Vcl.Grids, ShellAPI, ShlObj,
  Vcl.ComCtrls;

type
  TMainForm = class(TForm)
    pMainPanel: TPanel;
    pnlAddContact: TPanel;
    gbContactInformation: TGroupBox;
    lblFirstName: TLabel;
    lblLastName: TLabel;
    edtFirstName: TEdit;
    edtLastName: TEdit;
    lblPhoneNumber: TLabel;
    edtPhoneNumber: TEdit;
    lblEmail: TLabel;
    edtEmail: TEdit;
    btnSave: TButton;
    Panel1: TPanel;
    gbControls: TGroupBox;
    btnUpdate: TButton;
    btnDelete: TButton;
    btnSaveFile: TButton;
    btnLoadFile: TButton;
    lvTable: TListView;
    procedure btnLoadFileClick(Sender: TObject);
    procedure FillListView(line: string);
    function OpenFolderAndSelectFile(const FileName: string): boolean;
    procedure btnSaveClick(Sender: TObject);

  private

  public

  end;

var
  MainForm: TMainForm;

implementation

{$R *.dfm}

procedure TMainForm.btnLoadFileClick(Sender: TObject);
var
  reader : TStreamReader;
  stream : TFileStream;
  txt: TextFile;
  fileLocation, line : string;
  LLineText: TArray<string>;
begin
  OpenFolderAndSelectFile(fileLocation);
  stream := TFileStream.Create(fileLocation, fmOpenRead or fmShareDenyNone);
  reader := TStreamReader.Create(stream);
  try
    reader := TStreamReader.Create(stream, TEncoding.Default);
    while not reader.EndOfStream do
    begin
      FillListView(reader.ReadLine);
    end;
    reader.Free;
  finally
    stream.Free;
  end;
end;

procedure TMainForm.btnSaveClick(Sender: TObject);
begin
  if (edtFirstName.Text = '') or (edtLastName.Text = '') then
    raise Exception.Create('First and Last name must not be empty!');
  FillListView(edtFirstName.Text
                + ' ' + edtLastName.Text
                + ' ' + edtPhoneNumber.Text
                + ' ' + edtEmail.Text);
end;

procedure TMainForm.FillListView(line: string);
var
  i: Integer;
  lineSplit : TArray<string>;
begin
  lineSplit := line.Trim.Split([' ']);
  with lvTable.Items.Add do begin
    Caption := lineSplit[0] + ' ' + lineSplit[1];
    SubItems.Add(lineSplit[2]);
    SubItems.Add(lineSplit[3]);
    lvTable.Refresh;
  end;
end;

function TMainForm.OpenFolderAndSelectFile(const FileName: string): boolean;
var
  IIDL: PItemIDList;
begin
  result := false;
  IIDL := ILCreateFromPath(PChar(FileName));
  if IIDL <> nil then
    try
      result := SHOpenFolderAndSelectItems(IIDL, 0, nil, 0) = S_OK;
    finally
      ILFree(IIDL);
    end;
end;



end.
